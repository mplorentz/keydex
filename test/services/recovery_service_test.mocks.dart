// Mocks generated by Mockito 5.4.4 from annotations
// in keydex/test/services/recovery_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:keydex/models/backup_status.dart' as _i5;
import 'package:keydex/models/event_status.dart' as _i8;
import 'package:keydex/models/key_holder_status.dart' as _i4;
import 'package:keydex/services/backup_service.dart' as _i2;
import 'package:keydex/services/shard_distribution_service.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:ndk/ndk.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BackupService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackupService extends _i1.Mock implements _i2.BackupService {
  MockBackupService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<
      ({
        String? contentHash,
        DateTime createdAt,
        List<
            ({
              DateTime? acknowledgedAt,
              String? acknowledgmentEventId,
              String? giftWrapEventId,
              String? keyShare,
              DateTime? lastSeen,
              String? name,
              String pubkey,
              _i4.KeyHolderStatus status
            })> keyHolders,
        DateTime? lastContentChange,
        DateTime? lastRedistribution,
        DateTime lastUpdated,
        String lockboxId,
        List<String> relays,
        String specVersion,
        _i5.BackupStatus status,
        int threshold,
        int totalKeys
      })> createBackupConfiguration({
    required String? lockboxId,
    required int? threshold,
    required int? totalKeys,
    required List<
            ({
              DateTime? acknowledgedAt,
              String? acknowledgmentEventId,
              String? giftWrapEventId,
              String? keyShare,
              DateTime? lastSeen,
              String? name,
              String pubkey,
              _i4.KeyHolderStatus status
            })>?
        keyHolders,
    required List<String>? relays,
    String? contentHash,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBackupConfiguration,
          [],
          {
            #lockboxId: lockboxId,
            #threshold: threshold,
            #totalKeys: totalKeys,
            #keyHolders: keyHolders,
            #relays: relays,
            #contentHash: contentHash,
          },
        ),
        returnValue: _i3.Future<
            ({
              String? contentHash,
              DateTime createdAt,
              List<
                  ({
                    DateTime? acknowledgedAt,
                    String? acknowledgmentEventId,
                    String? giftWrapEventId,
                    String? keyShare,
                    DateTime? lastSeen,
                    String? name,
                    String pubkey,
                    _i4.KeyHolderStatus status
                  })> keyHolders,
              DateTime? lastContentChange,
              DateTime? lastRedistribution,
              DateTime lastUpdated,
              String lockboxId,
              List<String> relays,
              String specVersion,
              _i5.BackupStatus status,
              int threshold,
              int totalKeys
            })>.value((
          contentHash: null,
          createdAt: _FakeDateTime_0(
            this,
            Invocation.method(
              #createBackupConfiguration,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
                #contentHash: contentHash,
              },
            ),
          ),
          keyHolders: <({
            DateTime? acknowledgedAt,
            String? acknowledgmentEventId,
            String? giftWrapEventId,
            String? keyShare,
            DateTime? lastSeen,
            String? name,
            String pubkey,
            _i4.KeyHolderStatus status
          })>[],
          lastContentChange: null,
          lastRedistribution: null,
          lastUpdated: _FakeDateTime_0(
            this,
            Invocation.method(
              #createBackupConfiguration,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
                #contentHash: contentHash,
              },
            ),
          ),
          lockboxId: _i6.dummyValue<String>(
            this,
            Invocation.method(
              #createBackupConfiguration,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
                #contentHash: contentHash,
              },
            ),
          ),
          relays: <String>[],
          specVersion: _i6.dummyValue<String>(
            this,
            Invocation.method(
              #createBackupConfiguration,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
                #contentHash: contentHash,
              },
            ),
          ),
          status: _i5.BackupStatus.pending,
          threshold: 0,
          totalKeys: 0
        )),
      ) as _i3.Future<
          ({
            String? contentHash,
            DateTime createdAt,
            List<
                ({
                  DateTime? acknowledgedAt,
                  String? acknowledgmentEventId,
                  String? giftWrapEventId,
                  String? keyShare,
                  DateTime? lastSeen,
                  String? name,
                  String pubkey,
                  _i4.KeyHolderStatus status
                })> keyHolders,
            DateTime? lastContentChange,
            DateTime? lastRedistribution,
            DateTime lastUpdated,
            String lockboxId,
            List<String> relays,
            String specVersion,
            _i5.BackupStatus status,
            int threshold,
            int totalKeys
          })>);

  @override
  _i3.Future<
      ({
        String? contentHash,
        DateTime createdAt,
        List<
            ({
              DateTime? acknowledgedAt,
              String? acknowledgmentEventId,
              String? giftWrapEventId,
              String? keyShare,
              DateTime? lastSeen,
              String? name,
              String pubkey,
              _i4.KeyHolderStatus status
            })> keyHolders,
        DateTime? lastContentChange,
        DateTime? lastRedistribution,
        DateTime lastUpdated,
        String lockboxId,
        List<String> relays,
        String specVersion,
        _i5.BackupStatus status,
        int threshold,
        int totalKeys
      })?> getBackupConfig(String? lockboxId) => (super.noSuchMethod(
        Invocation.method(
          #getBackupConfig,
          [lockboxId],
        ),
        returnValue: _i3.Future<
            ({
              String? contentHash,
              DateTime createdAt,
              List<
                  ({
                    DateTime? acknowledgedAt,
                    String? acknowledgmentEventId,
                    String? giftWrapEventId,
                    String? keyShare,
                    DateTime? lastSeen,
                    String? name,
                    String pubkey,
                    _i4.KeyHolderStatus status
                  })> keyHolders,
              DateTime? lastContentChange,
              DateTime? lastRedistribution,
              DateTime lastUpdated,
              String lockboxId,
              List<String> relays,
              String specVersion,
              _i5.BackupStatus status,
              int threshold,
              int totalKeys
            })?>.value(),
      ) as _i3.Future<
          ({
            String? contentHash,
            DateTime createdAt,
            List<
                ({
                  DateTime? acknowledgedAt,
                  String? acknowledgmentEventId,
                  String? giftWrapEventId,
                  String? keyShare,
                  DateTime? lastSeen,
                  String? name,
                  String pubkey,
                  _i4.KeyHolderStatus status
                })> keyHolders,
            DateTime? lastContentChange,
            DateTime? lastRedistribution,
            DateTime lastUpdated,
            String lockboxId,
            List<String> relays,
            String specVersion,
            _i5.BackupStatus status,
            int threshold,
            int totalKeys
          })?>);

  @override
  _i3.Future<
      List<
          ({
            String? contentHash,
            DateTime createdAt,
            List<
                ({
                  DateTime? acknowledgedAt,
                  String? acknowledgmentEventId,
                  String? giftWrapEventId,
                  String? keyShare,
                  DateTime? lastSeen,
                  String? name,
                  String pubkey,
                  _i4.KeyHolderStatus status
                })> keyHolders,
            DateTime? lastContentChange,
            DateTime? lastRedistribution,
            DateTime lastUpdated,
            String lockboxId,
            List<String> relays,
            String specVersion,
            _i5.BackupStatus status,
            int threshold,
            int totalKeys
          })>> getAllBackupConfigs() => (super.noSuchMethod(
        Invocation.method(
          #getAllBackupConfigs,
          [],
        ),
        returnValue: _i3.Future<
            List<
                ({
                  String? contentHash,
                  DateTime createdAt,
                  List<
                      ({
                        DateTime? acknowledgedAt,
                        String? acknowledgmentEventId,
                        String? giftWrapEventId,
                        String? keyShare,
                        DateTime? lastSeen,
                        String? name,
                        String pubkey,
                        _i4.KeyHolderStatus status
                      })> keyHolders,
                  DateTime? lastContentChange,
                  DateTime? lastRedistribution,
                  DateTime lastUpdated,
                  String lockboxId,
                  List<String> relays,
                  String specVersion,
                  _i5.BackupStatus status,
                  int threshold,
                  int totalKeys
                })>>.value(<({
          String? contentHash,
          DateTime createdAt,
          List<
              ({
                DateTime? acknowledgedAt,
                String? acknowledgmentEventId,
                String? giftWrapEventId,
                String? keyShare,
                DateTime? lastSeen,
                String? name,
                String pubkey,
                _i4.KeyHolderStatus status
              })> keyHolders,
          DateTime? lastContentChange,
          DateTime? lastRedistribution,
          DateTime lastUpdated,
          String lockboxId,
          List<String> relays,
          String specVersion,
          _i5.BackupStatus status,
          int threshold,
          int totalKeys
        })>[]),
      ) as _i3.Future<
          List<
              ({
                String? contentHash,
                DateTime createdAt,
                List<
                    ({
                      DateTime? acknowledgedAt,
                      String? acknowledgmentEventId,
                      String? giftWrapEventId,
                      String? keyShare,
                      DateTime? lastSeen,
                      String? name,
                      String pubkey,
                      _i4.KeyHolderStatus status
                    })> keyHolders,
                DateTime? lastContentChange,
                DateTime? lastRedistribution,
                DateTime lastUpdated,
                String lockboxId,
                List<String> relays,
                String specVersion,
                _i5.BackupStatus status,
                int threshold,
                int totalKeys
              })>>);

  @override
  _i3.Future<void> updateBackupConfig(
          ({
            String? contentHash,
            DateTime createdAt,
            List<
                ({
                  DateTime? acknowledgedAt,
                  String? acknowledgmentEventId,
                  String? giftWrapEventId,
                  String? keyShare,
                  DateTime? lastSeen,
                  String? name,
                  String pubkey,
                  _i4.KeyHolderStatus status
                })> keyHolders,
            DateTime? lastContentChange,
            DateTime? lastRedistribution,
            DateTime lastUpdated,
            String lockboxId,
            List<String> relays,
            String specVersion,
            _i5.BackupStatus status,
            int threshold,
            int totalKeys
          })? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBackupConfig,
          [config],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteBackupConfig(String? lockboxId) => (super.noSuchMethod(
        Invocation.method(
          #deleteBackupConfig,
          [lockboxId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<
      List<
          ({
            int createdAt,
            String creatorPubkey,
            bool? isReceived,
            String? lockboxId,
            String? lockboxName,
            String? nostrEventId,
            List<String>? peers,
            String primeMod,
            DateTime? receivedAt,
            String? recipientPubkey,
            String shard,
            int shardIndex,
            int threshold,
            int totalShards
          })>> generateShamirShares({
    required String? content,
    required int? threshold,
    required int? totalShards,
    required String? creatorPubkey,
    required String? lockboxId,
    required String? lockboxName,
    required List<String>? peers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateShamirShares,
          [],
          {
            #content: content,
            #threshold: threshold,
            #totalShards: totalShards,
            #creatorPubkey: creatorPubkey,
            #lockboxId: lockboxId,
            #lockboxName: lockboxName,
            #peers: peers,
          },
        ),
        returnValue: _i3.Future<
            List<
                ({
                  int createdAt,
                  String creatorPubkey,
                  bool? isReceived,
                  String? lockboxId,
                  String? lockboxName,
                  String? nostrEventId,
                  List<String>? peers,
                  String primeMod,
                  DateTime? receivedAt,
                  String? recipientPubkey,
                  String shard,
                  int shardIndex,
                  int threshold,
                  int totalShards
                })>>.value(<({
          int createdAt,
          String creatorPubkey,
          bool? isReceived,
          String? lockboxId,
          String? lockboxName,
          String? nostrEventId,
          List<String>? peers,
          String primeMod,
          DateTime? receivedAt,
          String? recipientPubkey,
          String shard,
          int shardIndex,
          int threshold,
          int totalShards
        })>[]),
      ) as _i3.Future<
          List<
              ({
                int createdAt,
                String creatorPubkey,
                bool? isReceived,
                String? lockboxId,
                String? lockboxName,
                String? nostrEventId,
                List<String>? peers,
                String primeMod,
                DateTime? receivedAt,
                String? recipientPubkey,
                String shard,
                int shardIndex,
                int threshold,
                int totalShards
              })>>);

  @override
  _i3.Future<String> reconstructFromShares(
          {required List<
                  ({
                    int createdAt,
                    String creatorPubkey,
                    bool? isReceived,
                    String? lockboxId,
                    String? lockboxName,
                    String? nostrEventId,
                    List<String>? peers,
                    String primeMod,
                    DateTime? receivedAt,
                    String? recipientPubkey,
                    String shard,
                    int shardIndex,
                    int threshold,
                    int totalShards
                  })>?
              shares}) =>
      (super.noSuchMethod(
        Invocation.method(
          #reconstructFromShares,
          [],
          {#shares: shares},
        ),
        returnValue: _i3.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #reconstructFromShares,
            [],
            {#shares: shares},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> updateBackupStatus(
    String? lockboxId,
    _i5.BackupStatus? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBackupStatus,
          [
            lockboxId,
            status,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateKeyHolderStatus({
    required String? lockboxId,
    required String? pubkey,
    required _i4.KeyHolderStatus? status,
    DateTime? acknowledgedAt,
    String? acknowledgmentEventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKeyHolderStatus,
          [],
          {
            #lockboxId: lockboxId,
            #pubkey: pubkey,
            #status: status,
            #acknowledgedAt: acknowledgedAt,
            #acknowledgmentEventId: acknowledgmentEventId,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isBackupReady(String? lockboxId) => (super.noSuchMethod(
        Invocation.method(
          #isBackupReady,
          [lockboxId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<
      ({
        String? contentHash,
        DateTime createdAt,
        List<
            ({
              DateTime? acknowledgedAt,
              String? acknowledgmentEventId,
              String? giftWrapEventId,
              String? keyShare,
              DateTime? lastSeen,
              String? name,
              String pubkey,
              _i4.KeyHolderStatus status
            })> keyHolders,
        DateTime? lastContentChange,
        DateTime? lastRedistribution,
        DateTime lastUpdated,
        String lockboxId,
        List<String> relays,
        String specVersion,
        _i5.BackupStatus status,
        int threshold,
        int totalKeys
      })> createAndDistributeBackup({
    required String? lockboxId,
    required int? threshold,
    required int? totalKeys,
    required List<
            ({
              DateTime? acknowledgedAt,
              String? acknowledgmentEventId,
              String? giftWrapEventId,
              String? keyShare,
              DateTime? lastSeen,
              String? name,
              String pubkey,
              _i4.KeyHolderStatus status
            })>?
        keyHolders,
    required List<String>? relays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAndDistributeBackup,
          [],
          {
            #lockboxId: lockboxId,
            #threshold: threshold,
            #totalKeys: totalKeys,
            #keyHolders: keyHolders,
            #relays: relays,
          },
        ),
        returnValue: _i3.Future<
            ({
              String? contentHash,
              DateTime createdAt,
              List<
                  ({
                    DateTime? acknowledgedAt,
                    String? acknowledgmentEventId,
                    String? giftWrapEventId,
                    String? keyShare,
                    DateTime? lastSeen,
                    String? name,
                    String pubkey,
                    _i4.KeyHolderStatus status
                  })> keyHolders,
              DateTime? lastContentChange,
              DateTime? lastRedistribution,
              DateTime lastUpdated,
              String lockboxId,
              List<String> relays,
              String specVersion,
              _i5.BackupStatus status,
              int threshold,
              int totalKeys
            })>.value((
          contentHash: null,
          createdAt: _FakeDateTime_0(
            this,
            Invocation.method(
              #createAndDistributeBackup,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
              },
            ),
          ),
          keyHolders: <({
            DateTime? acknowledgedAt,
            String? acknowledgmentEventId,
            String? giftWrapEventId,
            String? keyShare,
            DateTime? lastSeen,
            String? name,
            String pubkey,
            _i4.KeyHolderStatus status
          })>[],
          lastContentChange: null,
          lastRedistribution: null,
          lastUpdated: _FakeDateTime_0(
            this,
            Invocation.method(
              #createAndDistributeBackup,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
              },
            ),
          ),
          lockboxId: _i6.dummyValue<String>(
            this,
            Invocation.method(
              #createAndDistributeBackup,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
              },
            ),
          ),
          relays: <String>[],
          specVersion: _i6.dummyValue<String>(
            this,
            Invocation.method(
              #createAndDistributeBackup,
              [],
              {
                #lockboxId: lockboxId,
                #threshold: threshold,
                #totalKeys: totalKeys,
                #keyHolders: keyHolders,
                #relays: relays,
              },
            ),
          ),
          status: _i5.BackupStatus.pending,
          threshold: 0,
          totalKeys: 0
        )),
      ) as _i3.Future<
          ({
            String? contentHash,
            DateTime createdAt,
            List<
                ({
                  DateTime? acknowledgedAt,
                  String? acknowledgmentEventId,
                  String? giftWrapEventId,
                  String? keyShare,
                  DateTime? lastSeen,
                  String? name,
                  String pubkey,
                  _i4.KeyHolderStatus status
                })> keyHolders,
            DateTime? lastContentChange,
            DateTime? lastRedistribution,
            DateTime lastUpdated,
            String lockboxId,
            List<String> relays,
            String specVersion,
            _i5.BackupStatus status,
            int threshold,
            int totalKeys
          })>);
}

/// A class which mocks [ShardDistributionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockShardDistributionService extends _i1.Mock
    implements _i7.ShardDistributionService {
  MockShardDistributionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<
      List<
          ({
            String backupConfigId,
            DateTime createdAt,
            String encryptedContent,
            String eventId,
            DateTime? publishedAt,
            String recipientPubkey,
            int shardIndex,
            _i8.EventStatus status
          })>> distributeShards({
    required String? ownerPubkey,
    required ({
      String? contentHash,
      DateTime createdAt,
      List<
          ({
            DateTime? acknowledgedAt,
            String? acknowledgmentEventId,
            String? giftWrapEventId,
            String? keyShare,
            DateTime? lastSeen,
            String? name,
            String pubkey,
            _i4.KeyHolderStatus status
          })> keyHolders,
      DateTime? lastContentChange,
      DateTime? lastRedistribution,
      DateTime lastUpdated,
      String lockboxId,
      List<String> relays,
      String specVersion,
      _i5.BackupStatus status,
      int threshold,
      int totalKeys
    })? config,
    required List<
            ({
              int createdAt,
              String creatorPubkey,
              bool? isReceived,
              String? lockboxId,
              String? lockboxName,
              String? nostrEventId,
              List<String>? peers,
              String primeMod,
              DateTime? receivedAt,
              String? recipientPubkey,
              String shard,
              int shardIndex,
              int threshold,
              int totalShards
            })>?
        shards,
    required _i9.Ndk? ndk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #distributeShards,
          [],
          {
            #ownerPubkey: ownerPubkey,
            #config: config,
            #shards: shards,
            #ndk: ndk,
          },
        ),
        returnValue: _i3.Future<
            List<
                ({
                  String backupConfigId,
                  DateTime createdAt,
                  String encryptedContent,
                  String eventId,
                  DateTime? publishedAt,
                  String recipientPubkey,
                  int shardIndex,
                  _i8.EventStatus status
                })>>.value(<({
          String backupConfigId,
          DateTime createdAt,
          String encryptedContent,
          String eventId,
          DateTime? publishedAt,
          String recipientPubkey,
          int shardIndex,
          _i8.EventStatus status
        })>[]),
      ) as _i3.Future<
          List<
              ({
                String backupConfigId,
                DateTime createdAt,
                String encryptedContent,
                String eventId,
                DateTime? publishedAt,
                String recipientPubkey,
                int shardIndex,
                _i8.EventStatus status
              })>>);

  @override
  _i3.Future<void> updateDistributionStatus({
    required String? lockboxId,
    required List<
            ({
              String backupConfigId,
              DateTime createdAt,
              String encryptedContent,
              String eventId,
              DateTime? publishedAt,
              String recipientPubkey,
              int shardIndex,
              _i8.EventStatus status
            })>?
        shardEvents,
    required _i9.Ndk? ndk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDistributionStatus,
          [],
          {
            #lockboxId: lockboxId,
            #shardEvents: shardEvents,
            #ndk: ndk,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> processShardConfirmationEvent(
          {required _i9.Nip01Event? event}) =>
      (super.noSuchMethod(
        Invocation.method(
          #processShardConfirmationEvent,
          [],
          {#event: event},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> processShardErrorEvent({required _i9.Nip01Event? event}) =>
      (super.noSuchMethod(
        Invocation.method(
          #processShardErrorEvent,
          [],
          {#event: event},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
